{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","console","log","Promise","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","periodos","reduce","dados","periodo","concat","Error","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente","consoli"],"mappings":";;;;;;;;;;;;;;;AAASA,uB,gBAAAA,W;;AACAC,6B,sBAAAA,iB;;AACAC,yB,qBAAAA,a;;AACAC,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;yCAEIC,iB;AAET,6CAAc;AAAA;;AAEV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;;;6DAEwB;;AAErB,+BAAO,KAAKK,KAAL,CACFC,GADE,CACE,oBADF,EAEFC,IAFE,CAEG,uBAAe;AACjB,mCAAOC,YAAYC,GAAZ,CAAgB;AAAA,uCAAU,IAAIN,UAAJ,CAAe,IAAIO,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAP;AACH,yBAJE,EAKFC,KALE,CAKI,UAACC,IAAD,EAAU;AACbC,oCAAQC,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAK,kDAAL,EAAN;AACH,yBARE,CAAP;AASH;;;qEAEgC;;AAE7B,+BAAO,KAAKX,KAAL,CACFC,GADE,CACE,4BADF,EAEFC,IAFE,CAEG,uBAAe;AACjB,mCAAOC,YAAYC,GAAZ,CAAgB;AAAA,uCAAU,IAAIN,UAAJ,CAAe,IAAIO,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAP;AAEH,yBALE,EAMFC,KANE,CAMI,UAACC,IAAD,EAAU;AACbC,oCAAQC,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAI,2DAAJ,EAAN;AACH,yBATE,CAAP;AAUH;;;sEAEiC;;AAE9B,+BAAO,KAAKX,KAAL,CACFC,GADE,CACE,6BADF,EAEFC,IAFE,CAEG,uBAAe;AACjB,mCAAOC,YAAYC,GAAZ,CAAgB;AAAA,uCAAU,IAAIN,UAAJ,CAAe,IAAIO,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAP;AAEH,yBALE,EAMFC,KANE,CAMI,UAACC,IAAD,EAAU;AACbC,oCAAQC,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAI,4DAAJ,EAAN;AACH,yBATE,CAAP;AAWH;;;uDAEkB;;AAEf,+BAAOG,QAAQC,GAAR,CAAY,CACf,KAAKC,sBAAL,EADe,EAEf,KAAKC,8BAAL,EAFe,EAGf,KAAKC,+BAAL,EAHe,CAAZ,EAIJhB,IAJI,CAIC,oBAAY;;AAEhB,gCAAIC,cAAcgB,SACbC,MADa,CACN,UAACC,KAAD,EAAQC,OAAR;AAAA,uCAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,6BADM,EACqC,EADrC,CAAlB;;AAGA,mCAAOnB,WAAP;AACH,yBAVM,EAUJO,KAVI,CAUE,UAACC,IAAD,EAAU;AACfC,oCAAQC,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAIa,KAAJ,CAAWb,IAAX,CAAN;AACH,yBAbM,CAAP;AAcH;;;6CAEQc,U,EAAY;;AAEjB,+BAAO7B,kBACF8B,aADE,GAEFxB,IAFE,CAEG;AAAA,mCAAe,IAAIL,aAAJ,CAAkB8B,UAAlB,CAAf;AAAA,yBAFH,EAGFzB,IAHE,CAGG;AAAA,mCAAO0B,IAAIC,QAAJ,CAAaJ,UAAb,CAAP;AAAA,yBAHH,EAIFvB,IAJE,CAIG;AAAA,mCAAM,mCAAN;AAAA,yBAJH,EAKFQ,KALE,CAKI,UAACC,IAAD,EAAU;AACbC,oCAAQC,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAIa,KAAJ,CAAU,yCAAV,CAAN;AACH,yBARE,CAAP;AASH;;;4CAEO;;AAEJ,+BAAO5B,kBACF8B,aADE,GAEFxB,IAFE,CAEG;AAAA,mCAAe,IAAIL,aAAJ,CAAkB8B,UAAlB,CAAf;AAAA,yBAFH,EAGFzB,IAHE,CAGG;AAAA,mCAAO0B,IAAIE,UAAJ,EAAP;AAAA,yBAHH,EAIFpB,KAJE,CAII,UAACC,IAAD,EAAU;AACbC,oCAAQC,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAIa,KAAJ,CAAU,uCAAV,CAAN;AACH,yBAPE,CAAP;AAQH;;;4CAEO;;AAEJ,+BAAO5B,kBACF8B,aADE,GAEFxB,IAFE,CAEG;AAAA,mCAAc,IAAIL,aAAJ,CAAkB8B,UAAlB,CAAd;AAAA,yBAFH,EAGFzB,IAHE,CAGG;AAAA,mCAAO0B,IAAIG,UAAJ,EAAP;AAAA,yBAHH,EAIF7B,IAJE,CAIG;AAAA,mCAAM,kCAAN;AAAA,yBAJH,EAKFQ,KALE,CAKI,gBAAQ;AACXE,oCAAQC,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAIa,KAAJ,CAAU,wCAAV,CAAN;AACH,yBARE,CAAP;AASH;;;4CAEOQ,U,EAAY;;AAEhB,+BAAO,KAAKC,gBAAL,GACF/B,IADE,CACG;AAAA,mCACFC,YAAY+B,MAAZ,CAAmB;AAAA,uCACnB,CAACF,WAAWG,IAAX,CAAgB;AAAA,2CACTC,KAAKC,SAAL,CAAeZ,UAAf,KAA8BW,KAAKC,SAAL,CAAeC,mBAAf,CADrB;AAAA,iCAAhB,CADkB;AAAA,6BAAnB,CADE;AAAA,yBADH,EAMF5B,KANE,CAMI,gBAAQ;;AAEX6B,oCAAQ1B,GAAR,CAAYF,IAAZ;AACA,kCAAM,IAAIa,KAAJ,CAAU,mDAAV,CAAN;AACH,yBAVE,CAAP;AAWH;;;;;;;;AACJ","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"./HttpService\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory\";\r\nimport { NegociacaoDao } from \"../dao/NegociacaoDao\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        \r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesSemana() {\r\n\r\n        return this._http\r\n            .get(\"negociacoes/semana\")\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch((erro) => {\r\n                console.log(erro)\r\n                throw new (\"Não foi possível obter as negociações da semana.\")\r\n            })\r\n    }\r\n\r\n    obterNegociacoesSemanaAnterior() {\r\n\r\n        return this._http\r\n            .get(\"negociacoes/semanaAnterior\")\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            })\r\n            .catch((erro) => {\r\n                console.log(erro)\r\n                throw new(\"Não foi possível obter as negociações da semana anterior.\")\r\n            })\r\n    };\r\n\r\n    obterNegociacoesSemanaRetrasada() {\r\n\r\n        return this._http\r\n            .get(\"negociacoes/semanaRetrasada\")\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            })\r\n            .catch((erro) => {\r\n                console.log(erro)\r\n                throw new(\"Não foi possível obter as negociações da semana retrasada.\")\r\n            })\r\n         \r\n    };\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesSemana(),\r\n            this.obterNegociacoesSemanaAnterior(),\r\n            this.obterNegociacoesSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n            \r\n            return negociacoes;\r\n        }).catch((erro) => {\r\n            console.log(erro)\r\n            throw new Error (erro)\r\n        })\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection =>  new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')\r\n            .catch((erro) => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível adicionar a negociação')\r\n            });\r\n    };\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection =>  new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch((erro) => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações');\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações')\r\n            });\r\n    };\r\n\r\n    importa(listaAtual) {\r\n\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                !listaAtual.some(negociacaoExistente =>\r\n                        JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))             \r\n                )\r\n            .catch(erro => {\r\n                \r\n                consoli.log(erro)\r\n                throw new Error('Não foi possível buscar negociações para importar');\r\n            });   \r\n    };\r\n};\r\n"]}
{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","traget","error","revolve","cursor","openCursor","negociacoes","atual","target","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEIC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AAEjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACH,6BAHD;;AAKAE,oCAAQK,OAAR,GAAkB,aAAK;;AAEnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAJD;AAKH,yBAjBM,CAAP;AAkBH;;;iDAEY;AAAA;;AAET,+BAAO,IAAIF,OAAJ,CAAa,UAACc,OAAD,EAAUZ,MAAV,EAAqB;;AAErC,gCAAIa,SAAS,OAAKlB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACkB,WADlB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRkB,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOR,SAAP,GAAmB,aAAK;;AAEpB,oCAAIW,QAAQP,EAAEQ,MAAF,CAASC,MAArB;;AAEA,oCAAGF,KAAH,EAAU;;AAEN,wCAAIG,OAAOH,MAAMI,KAAjB;;AAEAL,gDAAYM,IAAZ,CAAiB,IAAI7B,UAAJ,CAAe2B,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAR,0CAAMS,QAAN;AACH,iCAPD,MAOO;;AAEHb,4CAAQG,WAAR;AACH;AAEJ,6BAhBD;;AAkBAF,mCAAOP,OAAP,GAAiB,aAAK;;AAElBC,wCAAQC,GAAR,CAAYC,EAAEQ,MAAF,CAASN,KAArB;AACAX,uCAAO,uCAAP;AAEH,6BALD;AAOH,yBAlCM,CAAP;AAmCH;;;iDAEY;AAAA;;AAET,+BAAO,IAAIF,OAAJ,CAAa,UAACc,OAAD,EAAUZ,MAAV,EAAqB;;AAErC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT8B,KAHS,EAAd;;AAKIzB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKO,QAAQ,kCAAR,CAAL;AAAA,6BAApB;;AAEAX,oCAAQK,OAAR,GAAkB,aAAK;;AAEnBC,wCAAQC,GAAR,CAAYC,EAAEQ,MAAF,CAASN,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAJD;AAKP,yBAdM,CAAP;AAeH;;;;;;;;AACJ","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    };\r\n\r\n    adiciona(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n\r\n                console.log(e.traget.error);\r\n                reject('Não foi possivel adicionar a negociação')\r\n            };\r\n        });\r\n    };\r\n\r\n    listaTodos() {\r\n\r\n        return new Promise ((revolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n\r\n                let atual = e.target.result;\r\n\r\n                if(atual) {\r\n\r\n                    let dado = atual.value;\r\n\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                        \r\n                    atual.continue();\r\n                } else {\r\n\r\n                    revolve(negociacoes);\r\n                }\r\n\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n\r\n                console.log(e.target.error);\r\n                reject('Não foi possível lista as negocoações');\r\n\r\n            };\r\n\r\n        });\r\n    };\r\n\r\n    apagaTodos() {\r\n\r\n        return new Promise ((revolve, reject) => {\r\n\r\n            let request = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n            \r\n                request.onsuccess = e => revolve('Negociações apagadas com sucesso');\r\n\r\n                request.onerror = e => {\r\n                    \r\n                    console.log(e.target.error);\r\n                    reject('Não foi possivel apagar as negociações');\r\n                }\r\n        });\r\n    };\r\n};\r\n"]}